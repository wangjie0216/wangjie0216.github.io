(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{279:function(s,e,n){"use strict";n.r(e);var a=n(0),t=Object(a.a)({},function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"正则方括号"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#正则方括号","aria-hidden":"true"}},[s._v("#")]),s._v(" 正则方括号")]),s._v(" "),n("p",[s._v("[]正则得方括号：表示方括号种得元字符得任意一个")]),s._v(" "),n("p",[s._v("1.方括号中的部分特殊元字符代表字符原意义，不再具有特殊意义")]),s._v(" "),n("p",[s._v("例如：[.] [*] [?] [+]")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  let reg = /./;\n  let reg1 = /[.]/; // 方括号中的 . 表示普通小数点\n  console.log(reg.test('abc')); // true\n  console.log(reg.test('.')); // true\n  console.log(reg1.test('abc')); // false\n  console.log(reg1.test('.')); // true\n\n  let reg2 = /[?]/; // 方括号中的?表示问号，不是两次元字符\n  console.log(reg2.test('?'));\n\n  let reg3 = /[*]/; // 方括号中的*表示星号，不是量词源字符串\n  console.log(reg.test('*')); // true\n\n  let reg4 = /[+]/; // 方括号中的+表示加号，不是量词元字符\n  console.log(reg4.test('+')); // true\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("2.方括号不能识别多位数")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let reg  = /^183$/ //只能匹配183\n\nlet reg1 = /^[183]$/ //代表匹配1或者8或者3任意一个数字，不能连续匹配两个\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("3.中括号的范围限制")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  let reg = /^[12-89]$/  //表示匹配2 或者2-8或者9\n\n  因为中括号中的连续多位数不是表示一个多位数，二十表示多个一位数  \n  如果想要显示数字范围：可以把范围拆分\n  12-89可以拆分为：12-19 1[2-9]  30-79 [3-7][0-9] 80-89 8[0-9]\n  let reg1 = /^(1[2-9] | [3-7]\\d | 8[0-9])$/\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h2",{attrs:{id:"正则捕获"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#正则捕获","aria-hidden":"true"}},[s._v("#")]),s._v(" 正则捕获")])])},[],!1,null,null,null);e.default=t.exports}}]);