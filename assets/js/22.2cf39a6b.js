(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{275:function(s,e,a){"use strict";a.r(e);var n=a(0),r=Object(n.a)({},function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象","aria-hidden":"true"}},[s._v("#")]),s._v(" 对象")]),s._v(" "),a("p",[s._v("js中有七种数据类型，其中六种原始类型，因为原始类型的值只包含一种"),a("br"),s._v("\n而对象用来存储键值对和更复杂的实体。创建一个空对象：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let user = new Object();//构造函数法\nlet user = {};//字面量法\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"文本属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本属性","aria-hidden":"true"}},[s._v("#")]),s._v(" 文本属性")]),s._v(" "),a("p",[s._v("我们可以在创建对象时，在{}中添加一些键值对")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let user = {\n    name: 'wj',// 键 name  值  wj\n    age: 18, \n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("读取文件属性")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("console.log(user.name) // wj\nconsole.log(user,age)  //18\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("添加一个属性")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("user.isAdmin = true\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("删除一个属性")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("delete user.age\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("也可以用多字词语来命名，但是必须要加上引号")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let user = {\n    name: 'wj',\n    age: 18,\n    'like birds': true,\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("多词属性不能用点来读取，可以使用[]来读取，对任何属性都有效")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('let user = {};\nuser["likes birds"] = true;\nconsole.log(user["likes birds"]) // true\ndelete user["likes birds"];\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("[]中可以使用变量来获取属性")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('let key = "likes birds";\n\n// 跟 user["likes birds"] = true; 一样\nuser[key] = true;\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"引用复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用复制","aria-hidden":"true"}},[s._v("#")]),s._v(" 引用复制")]),s._v(" "),a("p",[s._v("对象和其他原始类型相比有一个重要的区别，对象是按引用存储复制的。"),a("br"),s._v("\n变量存储的不是对象，而是对象的内存地址，是对象的引用。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let user = { name: 'wj'};\nlet admin = user;//复制引用\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("现在有两个变量，但是都是指向同一个变量。"),a("br"),s._v("\n当改变其中一个变量，另一个也随之改变")]),s._v(" "),a("p",[s._v("常量对象\n一个被const修饰的对象 可以被修改")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const user = {\n  name: 'wj'\n};\nuser.age = 25;\nconsole.log(user.age) //25\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("因为 const 仅仅修饰 user。在这里 user 始终存储的都是同一个对象的引用。引用的地址没有变，只是引用的对象被修改了。"),a("br"),s._v("\n但是user不能够赋值给其他变量")]),s._v(" "),a("h2",{attrs:{id:"复制合并-object-assign"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复制合并-object-assign","aria-hidden":"true"}},[s._v("#")]),s._v(" 复制合并 Object.assign")]),s._v(" "),a("p",[s._v("语法：Object.assign(dest[,src1,src2...,srcn])\n参数 dest 和 src1, ..., srcN（可以有很多个）是对象。"),a("br"),s._v("\n这个方法复制了 src1, ..., srcN 的所有对象到 dest。换句话说，从第二个参数开始，所有对象的属性都复制给了第一个参数对象，然后返回 dest。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let user = {name:'wj'}\nlet src1 = {age:'18'}\nlet src2 = {sex:'男'}\nObject.assign(user,src1,src2)\nconsole.log(user)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("如果接收的对象有相同的属性名，则前面的会被覆盖。")])])},[],!1,null,null,null);e.default=r.exports}}]);