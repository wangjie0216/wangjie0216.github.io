(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{284:function(t,i,a){"use strict";a.r(i);var r=a(0),v=Object(r.a)({},function(){var t=this,i=t.$createElement,a=t._self._c||i;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("p",[t._v("windows安装git,可以直接到git官网安装"),a("a",{attrs:{href:"https://git-scm.com/downloads",title:"git",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载地址"),a("OutboundLink")],1),t._v(",\n国外的网站下载速度可能有点慢。"),a("br"),t._v("\n下载安装完成，鼠标右击出现 Git Bash ,点击打开出现命令框说明安装成功。")]),t._v(" "),a("h2",{attrs:{id:"绑定账户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绑定账户","aria-hidden":"true"}},[t._v("#")]),t._v(" 绑定账户")]),t._v(" "),a("p",[t._v('git config --global user.name "你的账户名称"')]),t._v(" "),a("p",[t._v('git config --global user.email "你的绑定邮箱账号"')]),t._v(" "),a("h2",{attrs:{id:"常用命令行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令行","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用命令行")]),t._v(" "),a("p",[t._v("git init //把当前目录变成git可管理的仓库")]),t._v(" "),a("p",[t._v("git add <文件名> //单个文件添加到仓库")]),t._v(" "),a("p",[t._v("git add . //把所有文件添加到仓库，常用命令")]),t._v(" "),a("p",[t._v('git commit -m "提交描述内容" //告诉git ,把内容提交到暂缓区，常用命令')]),t._v(" "),a("p",[t._v("git push origin master //提交内容到仓库，master是主分支名，如何提交到不同的分支修改master分支名即可，常用命令")]),t._v(" "),a("p",[t._v("git status //查看状态，可以看出那些文件被修改，红色说明文件在本地工作区，绿色说明文件在暂缓区")]),t._v(" "),a("h2",{attrs:{id:"版本回退"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本回退","aria-hidden":"true"}},[t._v("#")]),t._v(" 版本回退")]),t._v(" "),a("p",[t._v("git log //查看提交日志 显示的commit 后面一串编码是提交的id,每次commit 都会生成。")]),t._v(" "),a("p",[t._v("git reset --hard  id //撤回版本，id是commit的id,用于撤回哪一个版本。id可以是前几位，但是位数不能过短。")]),t._v(" "),a("p",[t._v("git reflog //打印出所有的提交记录")]),t._v(" "),a("h2",{attrs:{id:"撤销修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤销修改","aria-hidden":"true"}},[t._v("#")]),t._v(" 撤销修改")]),t._v(" "),a("p",[t._v("git checkout --file // file是文件名，必须加上--否则变成了切换分支，撤销该分支的修改")]),t._v(" "),a("h2",{attrs:{id:"和远程库建立关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和远程库建立关系","aria-hidden":"true"}},[t._v("#")]),t._v(" 和远程库建立关系")]),t._v(" "),a("p",[t._v("git remote -v //查看本地仓库和哪个仓库有关联")]),t._v(" "),a("p",[t._v("git remote add origin https://github.com/0216/blog.git\n//和远程库建立联系,origin是远程分支的名称")]),t._v(" "),a("p",[t._v("git push -u origin master\n//第一次推送加上-u,会把本地的分支和远程分支建立联系，以后只用git push origin master就可以了")]),t._v(" "),a("h2",{attrs:{id:"克隆代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#克隆代码","aria-hidden":"true"}},[t._v("#")]),t._v(" 克隆代码")]),t._v(" "),a("p",[t._v("git clone -b origin https://github.com/0216/blog.git\n// origin 是分支名称，后面是仓库地址，如果有权限或者开源就可以成功拉取")]),t._v(" "),a("h2",{attrs:{id:"分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 分支")]),t._v(" "),a("p",[t._v("git branch //查看当前分支名称")]),t._v(" "),a("p",[t._v("git branch dev //创建一个叫dev的分支")]),t._v(" "),a("p",[t._v("git checkout dev //切换当前分支到dev分支")]),t._v(" "),a("p",[t._v("git checkout -b dev //创建dev分支并切换分支到dev")]),t._v(" "),a("p",[t._v("git branch -d dev //删除dev分支")]),t._v(" "),a("p",[t._v("git branch -D dev //强行删除dev分支")]),t._v(" "),a("p",[t._v("git merge dev //合并dev分支的代码到本分支")]),t._v(" "),a("h2",{attrs:{id:"常用liunx命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用liunx命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用Liunx命令")]),t._v(" "),a("p",[t._v("mkdir //创建文件价")]),t._v(" "),a("p",[t._v("touch 文件名.扩展名 //创建文件")]),t._v(" "),a("p",[t._v("cat 文件名 //查看文件内容")]),t._v(" "),a("p",[t._v("cd 文件夹 //进入文件夹")]),t._v(" "),a("p",[t._v("cd ../ //进入上一级文件夹")]),t._v(" "),a("p",[t._v("pwd //查看当前文件所在路径")]),t._v(" "),a("p",[t._v("rm -rf 文件夹或者文件名 //强制删除文件")]),t._v(" "),a("p",[t._v("rm -rf * //删除全部")])])},[],!1,null,null,null);i.default=v.exports}}]);